[{"D:\\ReactJS\\Projects\\food-order-app\\src\\index.js":"1","D:\\ReactJS\\Projects\\food-order-app\\src\\App.js":"2","D:\\ReactJS\\Projects\\food-order-app\\src\\components\\Layout\\Header.js":"3"},{"size":142,"mtime":1616594953000,"results":"4","hashOfConfig":"5"},{"size":188,"mtime":1629959466060,"results":"6","hashOfConfig":"5"},{"size":536,"mtime":1629959417199,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18sxi5j",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\ReactJS\\Projects\\food-order-app\\src\\index.js",[],"D:\\ReactJS\\Projects\\food-order-app\\src\\App.js",[],"D:\\ReactJS\\Projects\\food-order-app\\src\\components\\Layout\\Header.js",["15"],"import { Fragment } from \"react\";\r\n\r\nimport mealsImage from \"../../assets/meals.jpg\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <header className={styles.header}>\r\n                <h1>Meals</h1>\r\n                <button>Cart</button>\r\n            </header>\r\n            <div className={styles[\"main-image\"]}>\r\n                <img src={mealsImage} alt=\"image is missing :(\" />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n",{"ruleId":"16","severity":1,"message":"17","line":14,"column":17,"nodeType":"18","endLine":14,"endColumn":67},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]